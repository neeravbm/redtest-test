<?php

/**
 * @file
 */

/**
 * Implements hook_menu().
 */
function redtest_common_menu() {
  $items = array();
  $items['save_data'] = array(
    'title' => 'test',
    'page callback' => 'redtest_commom_save_data',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
  );

  $items['redtest-form'] = array(
    'title' => 'RedTest Form',
    'description' => 'Custom form to test RedTest framework.',
    'access callback' => TRUE,
    'type' => MENU_CALLBACK,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('redtest_form'),
  );

  return $items;
}

function redtest_commom_save_data() {
  global $user;
  module_load_include('inc', 'node', 'node.pages');
  $node = (object) array(
    'uid' => $user->uid,
    'name' => $user->name,
    'type' => 'article',
    'language' => LANGUAGE_NONE,
  );
  $entity_type = 'node';
  $bundle_name = 'article';
  $form_id = "article_node_form";

  $form_state = array();
  $form_state['values'] = array();
  $form_state['values']['op'] = t('Save');
  if (!isset($form_state['build_info']['args'])) {
    $form_state['build_info']['args'] = array($node);
  }
  $form_state += form_state_defaults();
  $form_state['input'] = $form_state['values'];
  $form_state['programmed'] = TRUE;
  $form = drupal_retrieve_form($form_id, $form_state);
  $form_state['values']['title'] = 'Custom Node Created at ' . time();

  $field_boolean_single_checkbox_1 = 1;
  $field_boolean_single_checkbox_2 = 1;
  $field_boolean_single_checkbox_3 = 1;
  $field_boolean_single_checkbox_4 = 1;
  $field_boolean_single_checkbox_5 = 1;
  $field_boolean_single_checkbox_6 = 1;
  $field_boolean_single_checkbox_7 = 1;
  $field_boolean_single_checkbox_8 = 1;

  $data['field_boolean_single_checkbox_2'] = array($field_boolean_single_checkbox_1);
  $data['field_boolean_single_checkbox_2'] = array($field_boolean_single_checkbox_2);
  $data['field_boolean_single_checkbox_3'] = array($field_boolean_single_checkbox_3);
  $data['field_boolean_single_checkbox_4'] = array($field_boolean_single_checkbox_4);
  $data['field_boolean_single_checkbox_5'] = array($field_boolean_single_checkbox_5);
  $data['field_boolean_single_checkbox_6'] = array($field_boolean_single_checkbox_6);
  $data['field_boolean_single_checkbox_7'] = array($field_boolean_single_checkbox_7);
  $data['field_boolean_single_checkbox_8'] = array($field_boolean_single_checkbox_8);

  $data['field_boolean_checkboxes_1'] = array(1);

  $field_decimal_single_textfield_1 = 4.4;
  $data['field_decimal_single_textfield_1'] = array($field_decimal_single_textfield_1);


  $field_decimal_single_textfield_2 = 1.04;
  $data['field_decimal_single_textfield_2'] = array($field_decimal_single_textfield_2);

  $data['field_decimal_multiple_textfield'] = array(
    7.2,
    7.4,
    655,
    12313,
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4'
  );
  $data['field_decimal_multiple_text_2'] = array(
    1,
    3,
    'sdfdsfdsf',
    554,
    1.4,
    655,
    12313,
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4'
  );

  /*$data['field_decimal_multiple_textfield'] =
  array(
   array('value' =>7.2),
   array('value' =>7.4),
  );

  $data['field_decimal_multiple_text_2'] =
  array(
   array('value' => 1),
   array('value' => 3),
  );*/


  $field_float_single_textfield_1 = 3;
  $data['field_float_single_textfield_1'] = array($field_float_single_textfield_1);

  $field_float_single_textfield_2 = 1;
  $data['field_float_single_textfield_2'] = array($field_float_single_textfield_2);

  $data['field_float_multiple_textfield_1'] = array(
    -9,
    -2,
    655,
    12313,
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4'
  );
  /*array(
   array('value' => -9),
   array('value' => -2),
  );*/
  $data['field_float_multiple_textfield_2'] = array(
    9,
    4,
    3,
    2,
    1,
    'sdfdsf',
    'sdfdsf',
    655,
    12313,
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4'
  );
  /*$data['field_float_multiple_textfield_2'] =
  array(
   array('value' => 9),
   array('value' => 4),
   array('value' => 3),
   array('value' => 2),
   array('value' => 1),
  );*/

  $field_integer_single_textfield_1 = 100;
  $data['field_integer_single_textfield_1'] = array($field_integer_single_textfield_1);

  $data['field_integer_multiple_textfield'] = array(
    9,
    4,
    3,
    2,
    1,
    655,
    12313,
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4'
  );
  /*$data['field_integer_multiple_textfield'] =
  array(
   array('value' => 9),
   array('value' => 4),
   array('value' => 3),
   array('value' => 2),
   array('value' => 1),
  );*/

  $field_list_float_single_checkbox = 1.2;
  $data['field_list_float_single_checkbox'] = array($field_list_float_single_checkbox);

  $data['field_list_float_checkboxes_1'] = array(
    2.3,
    1,
    2,
    4.5,
    655,
    12313,
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4'
  );
  $data['field_list_float_checkboxes_2'] = array(
    9,
    3.1,
    8.9,
    655,
    12313,
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4'
  );

  $field_list_integer_single_checkb = 2;
  $data['field_list_integer_single_checkb'] = array($field_list_integer_single_checkb);


  $data['field_list_int_single_checkbox_2'] = array(
    3,
    9,
    6,
    8,
    655,
    12313,
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4'
  );

  $field_list_float_single_check_2 = 2.3;
  $data['field_list_float_single_check_2'] = array($field_list_float_single_check_2);

  $data['field_list_int_mult_checkboxes_1'] = array(
    3,
    67,
    655,
    12313,
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4'
  ); // 3, 67, 8, 0
  $data['field_list_int_mult_checkboxes_2'] = array(
    45,
    9,
    655,
    12313,
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4'
  ); // 45, 9, 0, 3

  $field_list_text_single_check_1 = 'a';
  $data['field_list_text_single_check_1'] = array($field_list_text_single_check_1); // a,c,d

  $field_list_text_single_check_2 = 'av';
  $data['field_list_text_single_check_2'] = array($field_list_text_single_check_2);// av, bv, dv

  $data['field_list_text_multi_checkbox_1'] = array(
    'a',
    'b',
    'c',
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4',
    655,
    12313
  );
  $data['field_list_text_multi_checkbox_2'] = array(
    'a',
    'b',
    'd',
    'ertret',
    '4564687',
    'XCCC',
    'N6%',
    'TP34#4',
    655,
    12313
  );

  $field_info_instances = field_info_instances($entity_type, $bundle_name);
  $allowed_values = array();


  foreach ($field_info_instances as $field_name => $values) {
    $field_info = field_info_field($field_name);
    dsm($field_info);
    if (isset($field_info['settings']['allowed_values'])) {
      $allowed_values[$field_name] = array_keys(
        $field_info['settings']['allowed_values']
      );
    }

    //$field_view_field = field_view_field($entity_type, $node, $field_name);
    //dsm($field_view_field);

    $field_info_instance = field_info_instance(
      $entity_type,
      $field_name,
      $bundle_name
    );
    dsm($field_info_instance);

    if ($field_info_instance['widget']['module'] == 'options') {
      if ($field_info_instance['widget']['type'] == 'options_onoff') {
        $form_state['values'][$field_name][LANGUAGE_NONE] = $data[$field_name];
      }
      else {
        $form_state['values'][$field_name][LANGUAGE_NONE] = array_intersect(
          $allowed_values[$field_name],
          $data[$field_name]
        );
      }
    }
    else {
      if (in_array(
        $field_info_instance['widget']['module'],
        array('text', 'number')
      )) {
        $separator = '';
        $scale = 2;
        $min = '';
        $max = '';
        //dsm($field_info_instance['widget']['module']);
        if ($field_info_instance['settings']['min']) {
          $min = $field_info_instance['settings']['min'];
        }

        if ($field_info_instance['settings']['max']) {
          $max = $field_info_instance['settings']['max'];
        }

        if (isset($field_info['settings']['decimal_separator'])) {
          $separator = $field_info['settings']['decimal_separator'];
        }

        if (isset($field_info['settings']['scale'])) {
          $scale = $field_info['settings']['scale'];
        }

        if (isset($field_info['type'])) {
          $type = $field_info['type'];
        }

        if (isset($field_info['module'])) {
          $module = $field_info['module'];
        }

        if ($field_info_instance['widget']['module'] == 'number') { // integer, float etc.
          $form_state['values'][$field_name][LANGUAGE_NONE] = _filter_valide_data_number(
            $min,
            $max,
            $data[$field_name],
            $separator,
            $scale,
            $module
          );
        }
        else {
          $form_state['values'][$field_name][LANGUAGE_NONE] = _filter_valide_data_text(
            $data[$field_name],
            $module,
            $field_name
          );
        }
      }
    }
  }


  //dsm($form_state['values']);

  //multiple fields
  foreach (element_children($form_state['values']) as $fieldname) {
    if (isset($form_state['values'][$fieldname][LANGUAGE_NONE]) && count(
        $form_state['values'][$fieldname][LANGUAGE_NONE]
      ) > 1
    ) {
      $element = drupal_array_get_nested_value(
        $form,
        array($fieldname, LANGUAGE_NONE)
      );
      $field_name = $element['#field_name'];
      $langcode = $element['#language'];
      $parents = $element['#field_parents'];

      // Increment the items count.
      $field_state = field_form_get_state(
        $parents,
        $field_name,
        $langcode,
        $form_state
      );
      $field_state['items_count'] = count(
          $form_state['values'][$fieldname][LANGUAGE_NONE]
        ) - 1;
      field_form_set_state(
        $parents,
        $field_name,
        $langcode,
        $form_state,
        $field_state
      );
      //$form = drupal_rebuild_form($form_id, $form_state, $form);
    }
  }

  drupal_form_submit('article_node_form', $form_state, (object) $node);
  $errors = form_get_errors();
  if (!empty($errors)) {
    foreach ($errors as $field_name => $message) {
      watchdog(
        'MYMODULE',
        '%field: %message',
        array('%message' => $message, '%field' => $field_name)
      );
    }
  }

  //dsm($node);
  return 'done';
}


function redtest_common_form_alter(&$form, &$form_state, $form_id) {
  if ('article_node_form' == $form_id) {
    $form['#submit'][] = 'test';
  }
}

function test(&$form, &$form_state) {

}

/*
 * function to filter data
 */
function filter_validate_data($min, $max, $values) {
  $output = array();
  if (sizeof($values) > 0) {
    foreach ($values as $value) {
      if ($min <= $value && $value <= $max) {
        $output[] = $value;
      }
    }
  }

  return $output;
}

/*
 * function to filter data
 */
function filter_validate_textfield($min, $max, $values) {
  $output = array();
  if (sizeof($values) > 0) {
    foreach ($values as $value) {
      foreach ($value as $val) {
        if ($min <= $val && $val <= $max) {
          $output[]['value'] = $val;
        }
      }
    }
  }

  return $output;
}


/*
 * function to filter numeric data
 * Here we handle two case
 *  1) with max & min 
 *  2) Without max & min
 */
function _filter_valide_data_number(
  $min,
  $max,
  $data,
  $separator,
  $scale,
  $module
) {
  $output = array();
  if ((isset($min) && !empty($min)) && (isset($max) && !empty($max))) {
    if (isset($data) && sizeof($data) > 0) {
      foreach ($data as $val) {
        if ($min <= $val && $val <= $max) {
          if (is_numeric($val)) { // like '9.1', '1337'
            if (!empty($separator) && is_float($val)) {
              $val = number_format($val, $scale, $separator, '');
            }
            $output[] = array('value' => $val);
          }
        }
      }
    }
  }
  else {
    if (isset($data) && sizeof($data) > 0) {
      foreach ($data as $val) {
        if (is_numeric($val)) {
          if (!empty($separator) && is_float($val)) {
            $val = number_format($val, $scale, $separator, '');
          }
          $output[] = array('value' => $val);
        }
      }
    }
  }

  return $output;
}

/*
 * function to filter textfield data
 */
function _filter_valide_data_text($data, $module, $field_name) {
  $output = array();
  if (isset($data)) {
    foreach ($data as $val) {
      if ($module == 'number' && is_numeric($val)) {
        $output[] = array('value' => $val);
      }
      else {
        if ($module == 'text') {
          $output[] = array('value' => $val);
        }
      }
    }
  }

  return $output;
}

/**
 * Implements hook_init().
 */
function redtest_common_init() {
  /*$view = views_get_view('list_of_test_nodes');
  $view->init_display();
  $view->pre_execute();
  $view->execute();
  dsm($view);*/
}

function redtest_form($form) {
  $form = array();

  $form['redtest_textfield_1'] = array(
    '#title' => t('Textfield 1'),
    '#type' => 'textfield',
    '#default_value' => variable_get('redtest_textfield_1', ''),
  );

  $form['redtest_textfield_2'] = array(
    '#title' => t('Textfield 2'),
    '#type' => 'textfield',
    '#default_value' => variable_get('redtest_textfield_2', 'Hello'),
    '#maxlength' => 63,
    '#size' => 20,
  );

  $form = system_settings_form($form);

  return $form;
}

